{
  "_args": [
    [
      {
        "raw": "file-filter",
        "scope": null,
        "escapedName": "file-filter",
        "name": "file-filter",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Administrator\\workspace\\jstest1"
    ]
  ],
  "_from": "file-filter@latest",
  "_id": "file-filter@1.0.0",
  "_inCache": true,
  "_location": "/file-filter",
  "_nodeVersion": "6.5.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/file-filter-1.0.0.tgz_1472680489400_0.5638748987112194"
  },
  "_npmUser": {
    "name": "natecavanaugh",
    "email": "nate@shift22.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "file-filter",
    "scope": null,
    "escapedName": "file-filter",
    "name": "file-filter",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/file-filter/-/file-filter-1.0.0.tgz",
  "_shasum": "bd7bc8d0244c80553fcaf92c82e0951df060b786",
  "_shrinkwrap": null,
  "_spec": "file-filter",
  "_where": "C:\\Users\\Administrator\\workspace\\jstest1",
  "author": {
    "name": "Nate Cavanaugh",
    "email": "nate@shift22.com",
    "url": "alterform.com"
  },
  "bin": {
    "file-filter": "bin/index.js"
  },
  "bugs": {
    "url": "https://github.com/natecavanaugh/file-filter/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.5",
    "get-stdin": "^5.0.1",
    "lodash": "^4.15.0",
    "md5": "^2.2.0",
    "meow": "^3.7.0",
    "pluralize": "^3.0.0",
    "string-sub": "0.0.1"
  },
  "description": "Filter a list of files to only the unique files, based on content",
  "devDependencies": {
    "chai": "*",
    "chai-string": "*",
    "coveralls": "*",
    "gulp": "*",
    "gulp-coveralls": "*",
    "gulp-help": "*",
    "gulp-istanbul": "^1.1.1",
    "gulp-load-plugins": "*",
    "gulp-mocha": "*",
    "istanbul": "*",
    "mocha": "*",
    "mock-stdin": "^0.3.0",
    "run-sequence": "*",
    "sinon": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "bd7bc8d0244c80553fcaf92c82e0951df060b786",
    "tarball": "https://registry.npmjs.org/file-filter/-/file-filter-1.0.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "gitHead": "934a68029384afb2fb7eb3fe766716c753779659",
  "homepage": "https://github.com/natecavanaugh/file-filter#readme",
  "keywords": [
    "cli-app",
    "cli",
    "bin"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "natecavanaugh",
      "email": "nate@shift22.com"
    }
  ],
  "name": "file-filter",
  "optionalDependencies": {},
  "readme": "# file-filter\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n\n> Filter a list of files to including only the unique files, based on content\n\n\n## Install\n\n```\n$ npm install --save file-filter\n```\n\n\n## Usage\n\n```js\nvar fileFilter = require('file-filter');\n\nfileFilter(['file-filter', 'file1.txt', 'duplicateFile1.txt', 'file2.txt']).then(results => {\n\t// results => {strict: {...}, loose: {...}, unprocessed: {...}}\n});\n```\n\n## CLI\n\n```\n$ npm install --global file-filter\n```\n\n```\n$ file-filter --help\n\n  Filter a list of files to only the unique files, based on content\n\n  Usage\n    $ file-filter [input]\n    $ [input] | file-filter\n\n  Options\n    -i Invert the results so that it shows you only the duplicates. Default: false\n    -s Append the summary about the number of unique files and duplicates. Default: false\n    -S Show only the summary about the number of unique files and duplicates. Default: false\n    -W By default, the comparisons ignore whitespace. This makes it so that it respects whitespace differences. Default: false\n  Examples\n    $ file-filter file1.txt duplicateFile1.txt file2.txt\n    file1.txt\n    file2.txt\n\n  # Assuming we're in a directory that has the same files as above\n    $ ls | file-filter\n    file1.txt\n    file2.txt\n```\n\n\n## API\n\n### fileFilter(input)\n\nReturns a Promise that resolves to an object of objects, containing the results of the comparisons.\n\nThe object returned is structured like so:\n```js\n\t{\n\t\t// Strict contains the result of a strict comparison\n\t\tstrict: {\n\t\t\tuniques: [...], // Array of strings of the unique filenames\n\t\t\tduplicates: [...], // Array of strings of the duplicate filenames\n\t\t\tfiles: [{name, hash, content}, ...] // Array of objects containing file name, the file hash and content used for the comparison\n\t\t},\n\n\t\t// Loose contains the result, but it ignores all whitespace in the comparison\n\t\tloose: {\n\t\t\tuniques: [...],\n\t\t\tduplicates: [...],\n\t\t\tfiles: [...]\n\t\t},\n\n\t\t// Unprocessed contains two arrays, one for any directories and one for anything else that was passed in but can't be read for whatever reason.\n\t\tunprocessed: {\n\t\t\tdirs: [...],\n\t\t\tmisc: [...]\n\t\t}\n\t}\n```\n\n#### input\n\n*Required*\nType: `string|Array`\n\nThis is the list of files to filter. It can be an array of files, or a newline separated string.\n\n\n## License\n\nMIT Â© [Nate Cavanaugh](http://alterform.com)\n\n[npm-image]: https://img.shields.io/npm/v/file-filter.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/file-filter\n[travis-image]: https://img.shields.io/travis/natecavanaugh/file-filter/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/natecavanaugh/file-filter\n[coveralls-image]: https://img.shields.io/coveralls/natecavanaugh/file-filter/master.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/natecavanaugh/file-filter?branch=master",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/natecavanaugh/file-filter.git"
  },
  "scripts": {
    "coveralls": "gulp coveralls",
    "test": "gulp test-coverage"
  },
  "version": "1.0.0"
}
