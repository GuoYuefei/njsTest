{
  "_args": [
    [
      {
        "raw": "base32-encode@^0.1.0",
        "scope": null,
        "escapedName": "base32-encode",
        "name": "base32-encode",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\Administrator\\workspace\\jstest1\\node_modules\\random-path"
    ]
  ],
  "_from": "base32-encode@>=0.1.0 <0.2.0",
  "_id": "base32-encode@0.1.1",
  "_inCache": true,
  "_location": "/base32-encode",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/base32-encode-0.1.1.tgz_1513273605106_0.8896064800210297"
  },
  "_npmUser": {
    "name": "linusu",
    "email": "linus@folkdatorn.se"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "base32-encode@^0.1.0",
    "scope": null,
    "escapedName": "base32-encode",
    "name": "base32-encode",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/random-path"
  ],
  "_resolved": "https://registry.npmjs.org/base32-encode/-/base32-encode-0.1.1.tgz",
  "_shasum": "7510f6aa44e2c695b7efcb2673a454f8f8505ea0",
  "_shrinkwrap": null,
  "_spec": "base32-encode@^0.1.0",
  "_where": "C:\\Users\\Administrator\\workspace\\jstest1\\node_modules\\random-path",
  "bugs": {
    "url": "https://github.com/LinusU/base32-encode/issues"
  },
  "dependencies": {},
  "description": "Base32 encoder with support for multiple variants.",
  "devDependencies": {
    "hex-to-array-buffer": "^0.1.0",
    "standard": "^8.0.0-beta.5"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jjc+6TC8PXrsxJ4CQr9ibioNhhAM1p/RvS9hy3Q+cxPphvXmLnFSkXoen2XXzNBrYjdmzajRtbFDl1x28F5F4A==",
    "shasum": "7510f6aa44e2c695b7efcb2673a454f8f8505ea0",
    "tarball": "https://registry.npmjs.org/base32-encode/-/base32-encode-0.1.1.tgz"
  },
  "gitHead": "d62a20c991471472cd2e65c28450907f73887b2e",
  "homepage": "https://github.com/LinusU/base32-encode#readme",
  "keywords": [
    "base32 encode",
    "base32 encoder",
    "base32",
    "base32hex",
    "crockford",
    "encoder",
    "rfc3548",
    "rfc4648"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "linusu",
      "email": "linus@folkdatorn.se"
    }
  ],
  "name": "base32-encode",
  "optionalDependencies": {},
  "readme": "# Base32 Encode\n\nBase32 encoder with support for multiple variants.\n\n## Installation\n\n```sh\nnpm install --save base32-encode\n```\n\n## Usage\n\n```js\nconst base32Encode = require('base32-encode')\nconst { buffer } = new Uint8Array([0x74, 0x65, 0x73, 0x74])\n\nconsole.log(base32Encode(buffer, 'Crockford'))\n//=> EHJQ6X0\n\nconsole.log(base32Encode(buffer, 'RFC4648'))\n//=> ORSXG5A=\n\nconsole.log(base32Encode(buffer, 'RFC4648-HEX'))\n//=> EHIN6T0=\n```\n\n## API\n\n### base32Encode(buffer, variant)\n\n- `buffer` &lt;ArrayBuffer&gt;\n- `variant` &lt;String&gt;\n\nEncode the data in `buffer`. `variant` should be one of the supported variants\nlisted below.\n\n- `'RFC3548'` - Alias for `'RFC4648'`\n- `'RFC4648'` - [Base32 from RFC4648](https://tools.ietf.org/html/rfc4648)\n- `'RFC4648-HEX'` - [base32hex from RFC4648](https://tools.ietf.org/html/rfc4648)\n- `'Crockford'` - [Crockford's Base32](http://www.crockford.com/wrmg/base32.html)\n\n## See also\n\n- [base32-decode](https://github.com/LinusU/base32-decode) - Base32 decoder\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LinusU/base32-encode.git"
  },
  "scripts": {
    "test": "standard && node test"
  },
  "version": "0.1.1"
}
